<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="1208,1035" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.Collections;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Main Flowchart" sap:VirtualizedContainerService.HintSize="634,870" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Default="http://193.219.91.103:2094/administrator/index.php" Name="ADMIN_PANEL_BASE_PATH" />
      <Variable x:TypeArguments="ui:Browser" Name="BROWSER" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="PAGE_ID_MAP">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132" xml:space="preserve">new Dictionary&lt;string, string&gt; {
	{"doktorantu-sarasai", "283"},
	{"doktorantu-sarasai-en", "937"},
	{"pagal-istojimo-metus", "923"},
	{"pagal-istojimo-metus-en", "938"},
	{"BGTG", "860"},
	{"BGTG-EN", "871"},
	{"ESG", "590"},
	{"ESG-EN", "612"},
	{"GOG", "589"},
	{"GOG-EN", "610"},
	{"ITTG", "596"},
	{"ITTG-EN", "616"},
	{"KSG", "595"},
	{"KSG-EN", "614"},
	{"KSIG", "594"},
	{"KSIG-EN", "613"},
	{"STG", "598"},
	{"STG-EN", "617"},
	{"VSAG", "593"},
	{"VSAG-EN", "618"}
}</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="ARTICLE_SEARCH_PATH">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">ADMIN_PANEL_BASE_PATH + "?option=com_content&amp;view=articles"</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Default="SOURCE\doktorantu_baze.xlsm" Name="EXCEL_PATH" />
      <Variable x:TypeArguments="ui:WorkbookApplication" Name="WORKBOOK" />
      <Variable x:TypeArguments="x:String" Name="textVal" />
      <Variable x:TypeArguments="x:String" Name="copiedText" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" Name="docDictionary">
        <Variable.Default>
          <mca:CSharpValue x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">new Dictionary&lt;string, List&lt;String&gt;&gt;()</mca:CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="s:String[]" Name="wbDocNames" />
      <Variable x:TypeArguments="s:String[]" Name="wbDocEN" />
      <Variable x:TypeArguments="s:String[]" Name="wbDocLT" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <x:Double x:Key="Height">834.04</x:Double>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,117</av:PointCollection>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID24</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID24">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,117</av:Point>
          <av:Size x:Key="ShapeSize">200,66</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,183 300,224.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="LOGIN" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:OpenBrowser CommunicationMethod="{x:Null}" Hidden="{x:Null}" BrowserType="Chrome" DisplayName="Open Login page" sap:VirtualizedContainerService.HintSize="467,184" sap2010:WorkflowViewState.IdRef="OpenBrowser_2" NewSession="True" Private="False">
          <ui:OpenBrowser.Body>
            <ActivityAction x:TypeArguments="x:Object">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </ActivityAction>
          </ui:OpenBrowser.Body>
          <ui:OpenBrowser.UiBrowser>
            <OutArgument x:TypeArguments="ui:Browser">
              <mca:CSharpReference x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpReference`1_7">BROWSER</mca:CSharpReference>
            </OutArgument>
          </ui:OpenBrowser.UiBrowser>
          <ui:OpenBrowser.Url>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">ADMIN_PANEL_BASE_PATH</mca:CSharpValue>
            </InArgument>
          </ui:OpenBrowser.Url>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:OpenBrowser>
        <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click login button" sap:VirtualizedContainerService.HintSize="467,106" sap2010:WorkflowViewState.IdRef="Click_9" KeyModifiers="None" MouseButton="BTN_LEFT">
          <ui:Click.CursorPosition>
            <ui:CursorPosition Position="Center">
              <ui:CursorPosition.OffsetX>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:CursorPosition.OffsetX>
              <ui:CursorPosition.OffsetY>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:CursorPosition.OffsetY>
            </ui:CursorPosition>
          </ui:Click.CursorPosition>
          <ui:Click.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="b6859e4c-68be-4514-8ced-951ece23850b" InformativeScreenshot="6c54582f726b4914fc643f792ce6cfe9" Selector="&lt;html app='chrome.exe' title='* - Administration' /&gt;&lt;webctrl tag='BUTTON' parentid='form-login' /&gt;">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
              <ui:Target.WaitForReady>
                <InArgument x:TypeArguments="ui:WaitForReady" />
              </ui:Target.WaitForReady>
            </ui:Target>
          </ui:Click.Target>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:Click>
        <ui:WaitUiElementVanish WaitNotActive="{x:Null}" WaitNotVisible="{x:Null}" DisplayName="Wait For login to complete" sap:VirtualizedContainerService.HintSize="467,106" sap2010:WorkflowViewState.IdRef="WaitUiElementVanish_2">
          <ui:WaitUiElementVanish.Target>
            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="73f12700-e01a-4887-b7e2-664d6ab8e7fa" InformativeScreenshot="64039e203a5208db983d91ddaddb995c" Selector="&lt;html app='chrome.exe' title='* - Administration' /&gt;&lt;webctrl tag='BUTTON' parentid='form-login' /&gt;" WaitForReady="COMPLETE">
              <ui:Target.TimeoutMS>
                <InArgument x:TypeArguments="x:Int32" />
              </ui:Target.TimeoutMS>
            </ui:Target>
          </ui:WaitUiElementVanish.Target>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:WaitUiElementVanish>
      </Sequence>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID19">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">200,224.5</av:Point>
              <av:Size x:Key="ShapeSize">200,51</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">300,275.5 300,325.5</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Flowchart DisplayName="Update Doktorantu Sarasai" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Flowchart_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                <av:Size x:Key="ShapeSize">60,75</av:Size>
                <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,114.5</av:PointCollection>
                <x:Double x:Key="Width">630</x:Double>
                <x:Double x:Key="Height">701.78301382023619</x:Double>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Flowchart.StartNode>
              <x:Reference>__ReferenceID5</x:Reference>
            </Flowchart.StartNode>
            <FlowStep x:Name="__ReferenceID0">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,264.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,315.5 300,334.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ClearEditorAndSaveChanges workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="ClearEditorAndSaveChanges.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="textVal">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">textVal</mca:CSharpValue>
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">200,334.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">300,385.5 300,424.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Go Edit EN Doktorantu Sarasai" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="wf_editPageById.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="ARTICLE_SEARCH_PATH">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_35">ARTICLE_SEARCH_PATH</mca:CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="ui:Browser" x:Key="BROWSER">
                        <mca:CSharpValue x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpValue`1_36">BROWSER</mca:CSharpValue>
                      </InArgument>
                      <InArgument x:TypeArguments="x:String" x:Key="id">
                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_38">PAGE_ID_MAP["doktorantu-sarasai-en"]</mca:CSharpValue>
                      </InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">200,424.5</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">300,475.5 300,514.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" CreateNewFile="False" DisplayName="Read Kryptys EN" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_4" InstanceCachePeriod="3000">
                        <ui:ExcelApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                            </ActivityAction.Argument>
                            <Sequence sap:VirtualizedContainerService.HintSize="376,455" sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="wbRows" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_5" SheetName="Kryptys" StartingCell="C1">
                                <ui:ExcelReadColumn.Result>
                                  <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                    <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_14">wbRows</mca:CSharpReference>
                                  </OutArgument>
                                </ui:ExcelReadColumn.Result>
                              </ui:ExcelReadColumn>
                              <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">textVal</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_39" xml:space="preserve">String.Join(Environment.NewLine,  wbRows.ToArray())</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:InvokeCode ContinueOnError="{x:Null}" Code="String pat = @&quot;(are\s)(currently\s)(\d+)(\sPhd)(\sstudent[a-z]+)&quot;;&#xA;&#xA;Regex reg = new Regex(pat);&#xA;Match match = reg.Match(str);&#xA;if (match.Success) {&#xA;    int num = Int32.Parse(match.Groups[3].ToString());&#xA;    &#xA;    if (num == 1) {&#xA;        str = Regex.Replace(str, pat, &quot;is $2$3$4 student&quot;);&#xA;    }&#xA;}" DisplayName="Sanitize word endings" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
                                <ui:InvokeCode.Arguments>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="str">
                                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">textVal</mca:CSharpReference>
                                  </InOutArgument>
                                </ui:InvokeCode.Arguments>
                              </ui:InvokeCode>
                            </Sequence>
                          </ActivityAction>
                        </ui:ExcelApplicationScope.Body>
                        <ui:ExcelApplicationScope.ExistingWorkbook>
                          <InArgument x:TypeArguments="ui:WorkbookApplication">
                            <mca:CSharpValue x:TypeArguments="ui:WorkbookApplication" sap2010:WorkflowViewState.IdRef="CSharpValue`1_43">WORKBOOK</mca:CSharpValue>
                          </InArgument>
                        </ui:ExcelApplicationScope.ExistingWorkbook>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ExcelApplicationScope>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">200,514.5</av:Point>
                              <av:Size x:Key="ShapeSize">200,51</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">480,355.5 480,385.5 220,385.5 220,414.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ClearEditorAndSaveChanges workflow" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="ClearEditorAndSaveChanges.xaml">
                            <ui:InvokeWorkflowFile.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="textVal">
                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_42">textVal</mca:CSharpValue>
                              </InArgument>
                            </ui:InvokeWorkflowFile.Arguments>
                          </ui:InvokeWorkflowFile>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,184.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,235.5 300,264.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Generate and read Kryptys" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_3" InstanceCachePeriod="3000">
                <ui:ExcelApplicationScope.Body>
                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                    </ActivityAction.Argument>
                    <Sequence sap:VirtualizedContainerService.HintSize="478,958" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="wbRows" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="436,151" sap2010:WorkflowViewState.IdRef="Sequence_12">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Generate &quot;Kryptys&quot;" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_3" MacroName="doktorantu_baze.xlsm!ThisWorkbook.kryptys" />
                      </Sequence>
                      <ui:ExcelReadColumn DisplayName="Read Column" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_4" SheetName="Kryptys" StartingCell="A1">
                        <ui:ExcelReadColumn.Result>
                          <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                            <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">wbRows</mca:CSharpReference>
                          </OutArgument>
                        </ui:ExcelReadColumn.Result>
                      </ui:ExcelReadColumn>
                      <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">
                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">textVal</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29" xml:space="preserve">String.Join(Environment.NewLine,  wbRows.ToArray())</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,272" sap2010:WorkflowViewState.IdRef="CommentOut_4">
                        <ui:CommentOut.Body>
                          <Sequence sap2010:Annotation.AnnotationText="Dummy value to demonstrate how the words are changed" DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,194" sap2010:WorkflowViewState.IdRef="Sequence_19">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">textVal</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_45">"&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n&lt;div&gt;Visose kryptyse DMSTI ðiuo metu studijuoja 40 doktorantai.&lt;br /&gt;&amp;nbsp;&lt;/div&gt;\r\n&lt;p&gt;{slider title=\"Gamtos mokslø Matematikos kryptis (N 001)\" open=\"false\"}&lt;/p&gt;\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n&lt;table cellspacing=\"0\" cellpadding=\"2\"&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td valign=\"middle\"&gt;&lt;strong&gt;Vardas, pavardë&lt;/strong&gt;&lt;/td&gt;"</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="String pat = @&quot;(studijuoja\s)(\d+)(\sdoktorant[a-z]+)&quot;;&#xA;&#xA;Regex reg = new Regex(pat);&#xA;Match match = reg.Match(str);&#xA;if (match.Success) {&#xA;    int num = Int32.Parse(match.Groups[2].ToString());&#xA;    &#xA;    if ((num &gt; 10 &amp;&amp; num &lt; 20) || (num % 10) == 0) {&#xA;        str = Regex.Replace(str, pat, &quot;$1$2 doktorantų&quot;);&#xA;    } else if (num % 10 == 1) {&#xA;        str = Regex.Replace(str, pat, &quot;$1$2 doktorantas&quot;);&#xA;    } else {&#xA;        str = Regex.Replace(str, pat, &quot;$1$2 doktorantai&quot;);&#xA;    }&#xA;}" DisplayName="Sanitize word endings" sap:VirtualizedContainerService.HintSize="436,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="x:String" x:Key="str">
                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">textVal</mca:CSharpReference>
                          </InOutArgument>
                        </ui:InvokeCode.Arguments>
                      </ui:InvokeCode>
                    </Sequence>
                  </ActivityAction>
                </ui:ExcelApplicationScope.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:ExcelApplicationScope.Workbook>
                  <OutArgument x:TypeArguments="ui:WorkbookApplication">
                    <mca:CSharpReference x:TypeArguments="ui:WorkbookApplication" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">WORKBOOK</mca:CSharpReference>
                  </OutArgument>
                </ui:ExcelApplicationScope.Workbook>
                <ui:ExcelApplicationScope.WorkbookPath>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">EXCEL_PATH</mca:CSharpValue>
                  </InArgument>
                </ui:ExcelApplicationScope.WorkbookPath>
              </ui:ExcelApplicationScope>
              <FlowStep.Next>
                <x:Reference>__ReferenceID0</x:Reference>
              </FlowStep.Next>
            </FlowStep>
            <FlowStep x:Name="__ReferenceID5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,114.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,165.5 300,184.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Go Edit Doktorantu Sarasai" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="wf_editPageById.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="ARTICLE_SEARCH_PATH">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_32">ARTICLE_SEARCH_PATH</mca:CSharpValue>
                  </InArgument>
                  <InArgument x:TypeArguments="ui:Browser" x:Key="BROWSER">
                    <mca:CSharpValue x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpValue`1_33">BROWSER</mca:CSharpValue>
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="id">
                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_34">PAGE_ID_MAP["doktorantu-sarasai"]</mca:CSharpValue>
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <FlowStep.Next>
                <x:Reference>__ReferenceID1</x:Reference>
              </FlowStep.Next>
            </FlowStep>
            <x:Reference>__ReferenceID2</x:Reference>
            <x:Reference>__ReferenceID3</x:Reference>
            <x:Reference>__ReferenceID4</x:Reference>
          </Flowchart>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID20">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,325.5</av:Point>
                  <av:Size x:Key="ShapeSize">200,51</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,376.5 300,426.5</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:CommentOut sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="CommentOut_10">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="746,798" sap2010:WorkflowViewState.IdRef="Sequence_34">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Flowchart DisplayName="Update Pagal Istojimo Metus" sap:VirtualizedContainerService.HintSize="704,706" sap2010:WorkflowViewState.IdRef="Flowchart_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                          <av:Size x:Key="ShapeSize">60,75</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,114.5</av:PointCollection>
                          <x:Double x:Key="Width">670</x:Double>
                          <x:Double x:Key="Height">669.5</x:Double>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Flowchart.StartNode>
                        <x:Reference>__ReferenceID11</x:Reference>
                      </Flowchart.StartNode>
                      <FlowStep x:Name="__ReferenceID6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">200,184.5</av:Point>
                            <av:Size x:Key="ShapeSize">200,51</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">300,235.5 300,285.5</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" CreateNewFile="False" DisplayName="Generate and read Metai LT" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" InstanceCachePeriod="3000">
                          <ui:ExcelApplicationScope.Body>
                            <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                              </ActivityAction.Argument>
                              <Sequence sap:VirtualizedContainerService.HintSize="478,854" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="wbRows" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="436,151" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Generate &quot;Metai&quot;" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_4" MacroName="doktorantu_baze.xlsm!ThisWorkbook.metai" />
                                </Sequence>
                                <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">textVal</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <Literal x:TypeArguments="x:String" Value="" />
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:ExcelReadColumn DisplayName="Read Metai data" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_6" SheetName="Metai" StartingCell="A1">
                                  <ui:ExcelReadColumn.Result>
                                    <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                      <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">wbRows</mca:CSharpReference>
                                    </OutArgument>
                                  </ui:ExcelReadColumn.Result>
                                </ui:ExcelReadColumn>
                                <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">
                                      <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">textVal</mca:CSharpReference>
                                    </OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">
                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49" xml:space="preserve">String.Join(Environment.NewLine,  wbRows.ToArray())</mca:CSharpValue>
                                    </InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,272" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                                  <ui:CommentOut.Body>
                                    <Sequence sap2010:Annotation.AnnotationText="Dummy value to demonstrate how the words are changed" DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,194" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">textVal</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">"&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n&lt;div&gt;Visose kryptyse DMSTI ðiuo metu studijuoja 40 doktorantai.&lt;br /&gt;&amp;nbsp;&lt;/div&gt;\r\n&lt;p&gt;{slider title=\"Gamtos mokslø Matematikos kryptis (N 001)\" open=\"false\"}&lt;/p&gt;\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n&lt;table cellspacing=\"0\" cellpadding=\"2\"&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td valign=\"middle\"&gt;&lt;strong&gt;Vardas, pavardë&lt;/strong&gt;&lt;/td&gt;"</mca:CSharpValue>
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </ui:CommentOut.Body>
                                </ui:CommentOut>
                              </Sequence>
                            </ActivityAction>
                          </ui:ExcelApplicationScope.Body>
                          <ui:ExcelApplicationScope.ExistingWorkbook>
                            <InArgument x:TypeArguments="ui:WorkbookApplication">
                              <mca:CSharpValue x:TypeArguments="ui:WorkbookApplication" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">WORKBOOK</mca:CSharpValue>
                            </InArgument>
                          </ui:ExcelApplicationScope.ExistingWorkbook>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ExcelApplicationScope>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID7">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">200,285.5</av:Point>
                                <av:Size x:Key="ShapeSize">200,66</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">300,351.5 300,401.5</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Edit LT site" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_23">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click inside code editor" sap:VirtualizedContainerService.HintSize="436,106" sap2010:WorkflowViewState.IdRef="Click_11" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e43ac64f-6e9e-4585-856c-af1f826890d3" InformativeScreenshot="5c374341e9a6fde4d7ab1efa43f1ad47" Selector="&lt;html app='chrome.exe' title='Articles: Edit - * - Administration' /&gt;&lt;webctrl class='CodeMirror-code' tag='DIV' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:Click>
                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Ctrl + a" sap:VirtualizedContainerService.HintSize="436,116" sap2010:WorkflowViewState.IdRef="SendHotkey_2" Key="a" KeyModifiers="Ctrl">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="d18a874c-e457-4973-844e-b0ca62b52838">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:SendHotkey.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SendHotkey>
                              <ui:CopySelectedText SendWindowMessages="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Copy everything from editor" sap:VirtualizedContainerService.HintSize="436,22" sap2010:WorkflowViewState.IdRef="CopySelectedText_1">
                                <ui:CopySelectedText.Result>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">copiedText</mca:CSharpReference>
                                  </OutArgument>
                                </ui:CopySelectedText.Result>
                              </ui:CopySelectedText>
                              <ui:InvokeCode ContinueOnError="{x:Null}" Code="String pat = &quot;(slider title=\&quot;)(\\d+)(\&quot; open=\&quot;false\&quot;)&quot;;&#xA;&#xA;Regex reg = new Regex(pat);&#xA;Match match = reg.Match(copiedText);&#xA;if (match.Success) {&#xA;    copiedText = Regex.Replace(copiedText, pat, &quot;slider $2&quot;);&#xA;}" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="436,164" sap2010:WorkflowViewState.IdRef="InvokeCode_3" Language="CSharp">
                                <ui:InvokeCode.Arguments>
                                  <InOutArgument x:TypeArguments="x:String" x:Key="copiedText">
                                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">copiedText</mca:CSharpReference>
                                  </InOutArgument>
                                </ui:InvokeCode.Arguments>
                              </ui:InvokeCode>
                              <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">
                                    <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">textVal</mca:CSharpReference>
                                  </OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">String.Join(Environment.NewLine, new String[] {textVal, copiedText})</mca:CSharpValue>
                                  </InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:SetToClipboard DisplayName="Set To Clipboard" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="SetToClipboard_1">
                                <ui:SetToClipboard.Text>
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">textVal</mca:CSharpValue>
                                  </InArgument>
                                </ui:SetToClipboard.Text>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SetToClipboard>
                              <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Ctrl + v" sap:VirtualizedContainerService.HintSize="436,116" sap2010:WorkflowViewState.IdRef="SendHotkey_3" Key="v" KeyModifiers="Ctrl">
                                <ui:SendHotkey.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="d18a874c-e457-4973-844e-b0ca62b52838">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:SendHotkey.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:SendHotkey>
                              <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Save page changes" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_12" KeyModifiers="None" MouseButton="BTN_LEFT">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e43ac64f-6e9e-4585-856c-af1f826890d3" InformativeScreenshot="5c374341e9a6fde4d7ab1efa43f1ad47" Selector="&lt;html app='chrome.exe' title='Articles: Edit - * - Administration' /&gt;&lt;webctrl parentid='toolbar-apply' tag='BUTTON' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:Click>
                            </Sequence>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID10">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">200,401.5</av:Point>
                                    <av:Size x:Key="ShapeSize">200,51</av:Size>
                                    <av:PointCollection x:Key="ConnectorLocation">300,452.5 300,502.5</av:PointCollection>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Go Edit Pagal Istojimo Metus" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="wf_editPageById.xaml">
                                  <ui:InvokeWorkflowFile.Arguments>
                                    <InArgument x:TypeArguments="x:String" x:Key="ARTICLE_SEARCH_PATH">
                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_61">ARTICLE_SEARCH_PATH</mca:CSharpValue>
                                    </InArgument>
                                    <InArgument x:TypeArguments="ui:Browser" x:Key="BROWSER">
                                      <mca:CSharpValue x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpValue`1_62">BROWSER</mca:CSharpValue>
                                    </InArgument>
                                    <InArgument x:TypeArguments="x:String" x:Key="id">
                                      <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">PAGE_ID_MAP["pagal-istojimo-metus-en"]</mca:CSharpValue>
                                    </InArgument>
                                  </ui:InvokeWorkflowFile.Arguments>
                                </ui:InvokeWorkflowFile>
                                <FlowStep.Next>
                                  <FlowStep x:Name="__ReferenceID9">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <av:Point x:Key="ShapeLocation">200,502.5</av:Point>
                                        <av:Size x:Key="ShapeSize">200,51</av:Size>
                                        <av:PointCollection x:Key="ConnectorLocation">300,553.5 300,603.5</av:PointCollection>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" CreateNewFile="False" DisplayName="Generate and read Metai EN" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" InstanceCachePeriod="3000">
                                      <ui:ExcelApplicationScope.Body>
                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                          </ActivityAction.Argument>
                                          <Sequence sap:VirtualizedContainerService.HintSize="478,663" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="wbRows" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">textVal</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">
                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelReadColumn DisplayName="Read Metai data" sap:VirtualizedContainerService.HintSize="436,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_7" SheetName="Metai" StartingCell="C1">
                                              <ui:ExcelReadColumn.Result>
                                                <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">wbRows</mca:CSharpReference>
                                                </OutArgument>
                                              </ui:ExcelReadColumn.Result>
                                            </ui:ExcelReadColumn>
                                            <Assign sap:VirtualizedContainerService.HintSize="436,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">textVal</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58" xml:space="preserve">String.Join(Environment.NewLine,  wbRows.ToArray())</mca:CSharpValue>
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,272" sap2010:WorkflowViewState.IdRef="CommentOut_6">
                                              <ui:CommentOut.Body>
                                                <Sequence sap2010:Annotation.AnnotationText="Dummy value to demonstrate how the words are changed" DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="304,194" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign sap:VirtualizedContainerService.HintSize="262,60" sap2010:WorkflowViewState.IdRef="Assign_13">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:String">
                                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_32">textVal</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:String">
                                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">"&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n&lt;div&gt;Visose kryptyse DMSTI ðiuo metu studijuoja 40 doktorantai.&lt;br /&gt;&amp;nbsp;&lt;/div&gt;\r\n&lt;p&gt;{slider title=\"Gamtos mokslø Matematikos kryptis (N 001)\" open=\"false\"}&lt;/p&gt;\r\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\r\n&lt;table cellspacing=\"0\" cellpadding=\"2\"&gt;\r\n&lt;tbody&gt;\r\n&lt;tr&gt;\r\n&lt;td valign=\"middle\"&gt;&lt;strong&gt;Vardas, pavardë&lt;/strong&gt;&lt;/td&gt;"</mca:CSharpValue>
                                                      </InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </ui:CommentOut.Body>
                                            </ui:CommentOut>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ExcelApplicationScope.Body>
                                      <ui:ExcelApplicationScope.ExistingWorkbook>
                                        <InArgument x:TypeArguments="ui:WorkbookApplication">
                                          <mca:CSharpValue x:TypeArguments="ui:WorkbookApplication" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">WORKBOOK</mca:CSharpValue>
                                        </InArgument>
                                      </ui:ExcelApplicationScope.ExistingWorkbook>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelApplicationScope>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID8">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">200,603.5</av:Point>
                                            <av:Size x:Key="ShapeSize">200,66</av:Size>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence DisplayName="Edit EN site" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click inside code editor" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_13" KeyModifiers="None" MouseButton="BTN_LEFT">
                                            <ui:Click.CursorPosition>
                                              <ui:CursorPosition Position="Center">
                                                <ui:CursorPosition.OffsetX>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:CursorPosition.OffsetX>
                                                <ui:CursorPosition.OffsetY>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:CursorPosition.OffsetY>
                                              </ui:CursorPosition>
                                            </ui:Click.CursorPosition>
                                            <ui:Click.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e43ac64f-6e9e-4585-856c-af1f826890d3" InformativeScreenshot="5c374341e9a6fde4d7ab1efa43f1ad47" Selector="&lt;html app='chrome.exe' title='Articles: Edit - * - Administration' /&gt;&lt;webctrl class='CodeMirror-code' tag='DIV' /&gt;">
                                                <ui:Target.TimeoutMS>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:Target.TimeoutMS>
                                                <ui:Target.WaitForReady>
                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                </ui:Target.WaitForReady>
                                              </ui:Target>
                                            </ui:Click.Target>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:Click>
                                          <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Ctrl + a" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_4" Key="a" KeyModifiers="Ctrl">
                                            <ui:SendHotkey.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="d18a874c-e457-4973-844e-b0ca62b52838">
                                                <ui:Target.TimeoutMS>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:Target.TimeoutMS>
                                                <ui:Target.WaitForReady>
                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                </ui:Target.WaitForReady>
                                              </ui:Target>
                                            </ui:SendHotkey.Target>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:SendHotkey>
                                          <ui:CopySelectedText SendWindowMessages="{x:Null}" TimeoutMS="{x:Null}" DisplayName="Copy everything from editor" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="CopySelectedText_2">
                                            <ui:CopySelectedText.Result>
                                              <OutArgument x:TypeArguments="x:String">
                                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">copiedText</mca:CSharpReference>
                                              </OutArgument>
                                            </ui:CopySelectedText.Result>
                                          </ui:CopySelectedText>
                                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="String pat = &quot;(slider title=\&quot;)(\\d+)(\&quot; open=\&quot;false\&quot;)&quot;;&#xA;&#xA;Regex reg = new Regex(pat);&#xA;Match match = reg.Match(copiedText);&#xA;if (match.Success) {&#xA;    copiedText = Regex.Replace(copiedText, pat, &quot;slider $2&quot;);&#xA;}" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_4" Language="CSharp">
                                            <ui:InvokeCode.Arguments>
                                              <InOutArgument x:TypeArguments="x:String" x:Key="copiedText">
                                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">copiedText</mca:CSharpReference>
                                              </InOutArgument>
                                            </ui:InvokeCode.Arguments>
                                          </ui:InvokeCode>
                                          <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">
                                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">textVal</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">String.Join(Environment.NewLine, new String[] {textVal, copiedText})</mca:CSharpValue>
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:SetToClipboard DisplayName="Set To Clipboard" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="SetToClipboard_2">
                                            <ui:SetToClipboard.Text>
                                              <InArgument x:TypeArguments="x:String">
                                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">textVal</mca:CSharpValue>
                                              </InArgument>
                                            </ui:SetToClipboard.Text>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:SetToClipboard>
                                          <ui:SendHotkey ClickBeforeTyping="{x:Null}" DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" EmptyField="{x:Null}" SendWindowMessages="{x:Null}" SpecialKey="{x:Null}" Activate="True" DisplayName="Ctrl + v" sap:VirtualizedContainerService.HintSize="334,116" sap2010:WorkflowViewState.IdRef="SendHotkey_5" Key="v" KeyModifiers="Ctrl">
                                            <ui:SendHotkey.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Selector="{x:Null}" Id="d18a874c-e457-4973-844e-b0ca62b52838">
                                                <ui:Target.TimeoutMS>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:Target.TimeoutMS>
                                                <ui:Target.WaitForReady>
                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                </ui:Target.WaitForReady>
                                              </ui:Target>
                                            </ui:SendHotkey.Target>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:SendHotkey>
                                          <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Save page changes" sap:VirtualizedContainerService.HintSize="334,106" sap2010:WorkflowViewState.IdRef="Click_14" KeyModifiers="None" MouseButton="BTN_LEFT">
                                            <ui:Click.CursorPosition>
                                              <ui:CursorPosition Position="Center">
                                                <ui:CursorPosition.OffsetX>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:CursorPosition.OffsetX>
                                                <ui:CursorPosition.OffsetY>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:CursorPosition.OffsetY>
                                              </ui:CursorPosition>
                                            </ui:Click.CursorPosition>
                                            <ui:Click.Target>
                                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e43ac64f-6e9e-4585-856c-af1f826890d3" InformativeScreenshot="5c374341e9a6fde4d7ab1efa43f1ad47" Selector="&lt;html app='chrome.exe' title='Articles: Edit - * - Administration' /&gt;&lt;webctrl parentid='toolbar-apply' tag='BUTTON' /&gt;">
                                                <ui:Target.TimeoutMS>
                                                  <InArgument x:TypeArguments="x:Int32" />
                                                </ui:Target.TimeoutMS>
                                                <ui:Target.WaitForReady>
                                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                                </ui:Target.WaitForReady>
                                              </ui:Target>
                                            </ui:Click.Target>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:Click>
                                        </Sequence>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowStep.Next>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                      <FlowStep x:Name="__ReferenceID11">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">200,114.5</av:Point>
                            <av:Size x:Key="ShapeSize">200,51</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">300,165.5 300,184.5</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Go Edit Pagal Istojimo Metus" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="wf_editPageById.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="x:String" x:Key="ARTICLE_SEARCH_PATH">
                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">ARTICLE_SEARCH_PATH</mca:CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="ui:Browser" x:Key="BROWSER">
                              <mca:CSharpValue x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">BROWSER</mca:CSharpValue>
                            </InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="id">
                              <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">PAGE_ID_MAP["pagal-istojimo-metus"]</mca:CSharpValue>
                            </InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                        </ui:InvokeWorkflowFile>
                        <FlowStep.Next>
                          <x:Reference>__ReferenceID6</x:Reference>
                        </FlowStep.Next>
                      </FlowStep>
                      <x:Reference>__ReferenceID7</x:Reference>
                      <x:Reference>__ReferenceID8</x:Reference>
                      <x:Reference>__ReferenceID9</x:Reference>
                      <x:Reference>__ReferenceID10</x:Reference>
                    </Flowchart>
                  </Sequence>
                </ui:CommentOut.Body>
              </ui:CommentOut>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID21">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">200,426.5</av:Point>
                      <av:Size x:Key="ShapeSize">200,51</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">300,477.5 300,527.5</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:CommentOut sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="CommentOut_14">
                    <ui:CommentOut.Body>
                      <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="676,728" sap2010:WorkflowViewState.IdRef="Sequence_68">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Flowchart DisplayName="Doktorantu duomenu tvarkymas" sap:VirtualizedContainerService.HintSize="634,636" sap2010:WorkflowViewState.IdRef="Flowchart_4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                              <av:Size x:Key="ShapeSize">60,75</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,127.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Flowchart.StartNode>
                            <x:Reference>__ReferenceID13</x:Reference>
                          </Flowchart.StartNode>
                          <FlowStep x:Name="__ReferenceID13">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <av:Point x:Key="ShapeLocation">200,127.5</av:Point>
                                <av:Size x:Key="ShapeSize">200,66</av:Size>
                                <av:PointCollection x:Key="ConnectorLocation">300,193.5 300,243.5</av:PointCollection>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Sequence DisplayName="Doktoranto duomenu nuskaitymas" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_47">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" CreateNewFile="False" DisplayName="Generate and read Doktorantai data" sap:VirtualizedContainerService.HintSize="452,1565" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" InstanceCachePeriod="3000">
                                <ui:ExcelApplicationScope.Body>
                                  <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                    </ActivityAction.Argument>
                                    <Sequence sap:VirtualizedContainerService.HintSize="418,1456" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                      <Sequence.Variables>
                                        <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="wbRows" />
                                        <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="readValue" />
                                      </Sequence.Variables>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Generate &quot;Doktorantai&quot;" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_7" MacroName="doktorantu_baze.xlsm!ThisWorkbook.doktorantas" />
                                      </Sequence>
                                      <Assign sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_18">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">
                                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_80">textVal</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:ExcelReadColumn DisplayName="Read DoktorantasName" sap:VirtualizedContainerService.HintSize="376,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_11" SheetName="Doktorantas" StartingCell="A2">
                                        <ui:ExcelReadColumn.Result>
                                          <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                            <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_81">readValue</mca:CSharpReference>
                                          </OutArgument>
                                        </ui:ExcelReadColumn.Result>
                                      </ui:ExcelReadColumn>
                                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="wbDocNames = enumList.Cast&lt;string&gt;().ToArray();" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="376,164" sap2010:WorkflowViewState.IdRef="InvokeCode_11" Language="CSharp">
                                        <ui:InvokeCode.Arguments>
                                          <InOutArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="enumList">
                                            <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_82">readValue</mca:CSharpReference>
                                          </InOutArgument>
                                          <InOutArgument x:TypeArguments="s:String[]" x:Key="wbDocNames">
                                            <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_83">wbDocNames</mca:CSharpReference>
                                          </InOutArgument>
                                        </ui:InvokeCode.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeCode>
                                      <ui:ExcelReadColumn DisplayName="Read DoktorantasLT" sap:VirtualizedContainerService.HintSize="376,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_12" SheetName="Doktorantas" StartingCell="B2">
                                        <ui:ExcelReadColumn.Result>
                                          <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                            <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_84">readValue</mca:CSharpReference>
                                          </OutArgument>
                                        </ui:ExcelReadColumn.Result>
                                      </ui:ExcelReadColumn>
                                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="wbDocNames = enumList.Cast&lt;string&gt;().ToArray();" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="376,164" sap2010:WorkflowViewState.IdRef="InvokeCode_12" Language="CSharp">
                                        <ui:InvokeCode.Arguments>
                                          <InOutArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="enumList">
                                            <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_85">readValue</mca:CSharpReference>
                                          </InOutArgument>
                                          <InOutArgument x:TypeArguments="s:String[]" x:Key="wbDocNames">
                                            <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_86">wbDocLT</mca:CSharpReference>
                                          </InOutArgument>
                                        </ui:InvokeCode.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeCode>
                                      <ui:ExcelReadColumn DisplayName="Read DoktorantasEN" sap:VirtualizedContainerService.HintSize="376,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_13" SheetName="Doktorantas" StartingCell="C2">
                                        <ui:ExcelReadColumn.Result>
                                          <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                            <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_87">readValue</mca:CSharpReference>
                                          </OutArgument>
                                        </ui:ExcelReadColumn.Result>
                                      </ui:ExcelReadColumn>
                                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="wbDocNames = enumList.Cast&lt;string&gt;().ToArray();" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="376,164" sap2010:WorkflowViewState.IdRef="InvokeCode_13" Language="CSharp">
                                        <ui:InvokeCode.Arguments>
                                          <InOutArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="enumList">
                                            <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_88">readValue</mca:CSharpReference>
                                          </InOutArgument>
                                          <InOutArgument x:TypeArguments="s:String[]" x:Key="wbDocNames">
                                            <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_89">wbDocEN</mca:CSharpReference>
                                          </InOutArgument>
                                        </ui:InvokeCode.Arguments>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                      </ui:InvokeCode>
                                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="string tempLT = docLT[0];&#xA;string tempEN = docEN[0];&#xA;&#xA;        for(int i = 0; i &lt; nameList.Count()-1; i++) {&#xA;            if(!nameMap.ContainsKey(nameList[i]) &amp;&amp; nameList[i] == nameList[i+1]) {&#xA;                tempLT += Environment.NewLine + docLT[i+1];&#xA;                tempEN += Environment.NewLine + docEN[i+1];&#xA;            }&#xA;&#x9;&#x9; else {&#xA;                if(nameMap.ContainsKey(nameList[i])) continue;&#xA;                nameMap.Add(nameList[i], new List&lt;String&gt;(new string[] {tempLT, tempEN}));&#xA;                tempLT = docLT[i+1];&#xA;                tempEN = docEN[i+1];&#xA;            }&#xA;        }&#xA;            if(!nameMap.ContainsKey(nameList[nameList.Count()-1])) nameMap.Add(nameList[nameList.Count()-1], new List&lt;String&gt;(new string[] {tempLT, tempEN}));" DisplayName="Assign each doctorant its LT and EN values" sap:VirtualizedContainerService.HintSize="376,164" sap2010:WorkflowViewState.IdRef="InvokeCode_14" Language="CSharp">
                                        <ui:InvokeCode.Arguments>
                                          <InOutArgument x:TypeArguments="s:String[]" x:Key="nameList">
                                            <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_90">wbDocNames</mca:CSharpReference>
                                          </InOutArgument>
                                          <InOutArgument x:TypeArguments="s:String[]" x:Key="docLT">
                                            <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_91">wbDocLT</mca:CSharpReference>
                                          </InOutArgument>
                                          <InOutArgument x:TypeArguments="s:String[]" x:Key="docEN">
                                            <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_92">wbDocEN</mca:CSharpReference>
                                          </InOutArgument>
                                          <InOutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="nameMap">
                                            <mca:CSharpReference x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" sap2010:WorkflowViewState.IdRef="CSharpReference`1_93">docDictionary</mca:CSharpReference>
                                          </InOutArgument>
                                        </ui:InvokeCode.Arguments>
                                      </ui:InvokeCode>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ExcelApplicationScope.Body>
                                <ui:ExcelApplicationScope.ExistingWorkbook>
                                  <InArgument x:TypeArguments="ui:WorkbookApplication">
                                    <mca:CSharpValue x:TypeArguments="ui:WorkbookApplication" sap2010:WorkflowViewState.IdRef="CSharpValue`1_101">WORKBOOK</mca:CSharpValue>
                                  </InArgument>
                                </ui:ExcelApplicationScope.ExistingWorkbook>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ExcelApplicationScope>
                            </Sequence>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID12">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <av:Point x:Key="ShapeLocation">200,243.5</av:Point>
                                    <av:Size x:Key="ShapeSize">200,66</av:Size>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Sequence DisplayName="Search and edit each doctorant" sap:VirtualizedContainerService.HintSize="496,1986" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="wbDocNames = wbDocNames.Distinct().ToArray();" DisplayName="Remove duplicate doctorant name values in array" sap:VirtualizedContainerService.HintSize="454,164" sap2010:WorkflowViewState.IdRef="InvokeCode_15" Language="CSharp">
                                    <ui:InvokeCode.Arguments>
                                      <InOutArgument x:TypeArguments="s:String[]" x:Key="wbDocNames">
                                        <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_96">wbDocNames</mca:CSharpReference>
                                      </InOutArgument>
                                    </ui:InvokeCode.Arguments>
                                  </ui:InvokeCode>
                                  <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each item in doctorant names array" sap:VirtualizedContainerService.HintSize="454,1690" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
                                    <ui:ForEach.Body>
                                      <ActivityAction x:TypeArguments="x:Object">
                                        <ActivityAction.Argument>
                                          <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                        </ActivityAction.Argument>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="418,1556" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,712" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Call to search for LT article" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_14" UnSafe="False" WorkflowFileName="wf_editPageByCategory.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="ui:Browser" x:Key="BROWSER">
                                                  <mca:CSharpValue x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpValue`1_110">BROWSER</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="ARTICLE_SEARCH_PATH">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_111">ARTICLE_SEARCH_PATH</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="language">LT</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="category">Darbuotojai</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="docName">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_112">item.ToString()</mca:CSharpValue>
                                                </InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Copy text from editor to clipboard" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_15" UnSafe="False" WorkflowFileName="CopyEditorText.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="readValue">
                                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_98">textVal</mca:CSharpReference>
                                                </InOutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="String existingPat = @&quot;(&lt;p&gt;{slider\sDoktorant((?:(?!&lt;p&gt;{(slider|\/sliders)).)+[\r\n])+)&quot;;&#xA;&#xA;Regex existingReg = new Regex(existingPat);&#xA;Match match = existingReg.Match(str);&#xA;// Slider already present, replace&#xA;if (match.Success) {&#xA;    str = Regex.Replace(str, existingPat, updated + Environment.NewLine);&#xA;} else {&#xA;    // Slider not present, append at the bottom&#xA;    str = Regex.Replace(str, @&quot;&lt;p&gt;{\/sliders}&lt;/p&gt;&quot;, &quot;&quot;) + updated + Environment.NewLine + @&quot;&lt;p&gt;/sliders}&lt;/p&gt;&quot;;&#xA;}" DisplayName="Replace new value to copied text" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_17" Language="CSharp">
                                              <ui:InvokeCode.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="str">
                                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_99">textVal</mca:CSharpReference>
                                                </InOutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="updated">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">docDictionary[item.ToString()][0]</mca:CSharpValue>
                                                </InArgument>
                                              </ui:InvokeCode.Arguments>
                                            </ui:InvokeCode>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Paste text to editor and save" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="ClearEditorAndSaveChanges.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="textVal">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_114">textVal</mca:CSharpValue>
                                                </InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                          <Sequence sap:VirtualizedContainerService.HintSize="376,712" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Search for each doctorant EN article" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_17" UnSafe="False" WorkflowFileName="wf_editPageByCategory.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="ui:Browser" x:Key="BROWSER">
                                                  <mca:CSharpValue x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpValue`1_117">BROWSER</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="ARTICLE_SEARCH_PATH">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_116">ARTICLE_SEARCH_PATH</mca:CSharpValue>
                                                </InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="language">EN</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="category">Darbuotojai</InArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="docName">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_115">item.ToString()</mca:CSharpValue>
                                                </InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Copy EN text to clipboard" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="CopyEditorText.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="readValue">
                                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_100">textVal</mca:CSharpReference>
                                                </InOutArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="String existingPat = @&quot;(&lt;p&gt;{slider\sDoctoral studies((?:(?!&lt;p&gt;{(slider|\/sliders)).)+[\r\n])+)&quot;;&#xA;&#xA;Regex existingReg = new Regex(existingPat);&#xA;Match match = existingReg.Match(str);&#xA;// Slider already present, replace&#xA;if (match.Success) {&#xA;    str = Regex.Replace(str, existingPat, updated + Environment.NewLine);&#xA;} else {&#xA;    // Slider not present, append at the bottom&#xA;    str = Regex.Replace(str, @&quot;&lt;p&gt;{\/sliders}&lt;/p&gt;&quot;, &quot;&quot;) + updated + Environment.NewLine + @&quot;&lt;p&gt;/sliders}&lt;/p&gt;&quot;;&#xA;}" DisplayName="Paste new text to clipboard copied text" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_18" Language="CSharp">
                                              <ui:InvokeCode.Arguments>
                                                <InOutArgument x:TypeArguments="x:String" x:Key="str">
                                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_101">textVal</mca:CSharpReference>
                                                </InOutArgument>
                                                <InArgument x:TypeArguments="x:String" x:Key="updated">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_118">docDictionary[item.ToString()][1]</mca:CSharpValue>
                                                </InArgument>
                                              </ui:InvokeCode.Arguments>
                                            </ui:InvokeCode>
                                            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Paste text to editor and save" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="ClearEditorAndSaveChanges.xaml">
                                              <ui:InvokeWorkflowFile.Arguments>
                                                <InArgument x:TypeArguments="x:String" x:Key="textVal">
                                                  <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_119">textVal</mca:CSharpValue>
                                                </InArgument>
                                              </ui:InvokeWorkflowFile.Arguments>
                                            </ui:InvokeWorkflowFile>
                                          </Sequence>
                                        </Sequence>
                                      </ActivityAction>
                                    </ui:ForEach.Body>
                                    <ui:ForEach.Values>
                                      <InArgument x:TypeArguments="sc:IEnumerable">
                                        <mca:CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_102">wbDocNames</mca:CSharpValue>
                                      </InArgument>
                                    </ui:ForEach.Values>
                                  </ui:ForEach>
                                </Sequence>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                          <x:Reference>__ReferenceID12</x:Reference>
                        </Flowchart>
                      </Sequence>
                    </ui:CommentOut.Body>
                  </ui:CommentOut>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID22">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">200,527.5</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">300,578.5 300,628.5</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Flowchart DisplayName="Vadovu duomenu tvarkymas" sap:VirtualizedContainerService.HintSize="634,636" sap2010:WorkflowViewState.IdRef="Flowchart_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                            <av:Size x:Key="ShapeSize">60,75</av:Size>
                            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,127.5</av:PointCollection>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Flowchart.StartNode>
                          <x:Reference>__ReferenceID15</x:Reference>
                        </Flowchart.StartNode>
                        <FlowStep x:Name="__ReferenceID15">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">200,127.5</av:Point>
                              <av:Size x:Key="ShapeSize">200,66</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">300,193.5 300,243.5</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Vadovas data read" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_54">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" CreateNewFile="False" DisplayName="Generate and read Vadovas" sap:VirtualizedContainerService.HintSize="452,1565" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" InstanceCachePeriod="3000">
                              <ui:ExcelApplicationScope.Body>
                                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                  </ActivityAction.Argument>
                                  <Sequence sap:VirtualizedContainerService.HintSize="418,1456" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="wbRows" />
                                      <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="readValue" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Generate &quot;Vadovas&quot;" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_8" MacroName="doktorantu_baze.xlsm!ThisWorkbook.vadovas" />
                                    </Sequence>
                                    <Assign sap:VirtualizedContainerService.HintSize="376,60" sap2010:WorkflowViewState.IdRef="Assign_19">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">
                                          <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_102">textVal</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:ExcelReadColumn DisplayName="Read Vadovas Name" sap:VirtualizedContainerService.HintSize="376,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_14" SheetName="Vadovas" StartingCell="A2">
                                      <ui:ExcelReadColumn.Result>
                                        <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_103">readValue</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:ExcelReadColumn.Result>
                                    </ui:ExcelReadColumn>
                                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="wbDocNames = enumList.Cast&lt;string&gt;().ToArray();" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="376,164" sap2010:WorkflowViewState.IdRef="InvokeCode_19" Language="CSharp">
                                      <ui:InvokeCode.Arguments>
                                        <InOutArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="enumList">
                                          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_104">readValue</mca:CSharpReference>
                                        </InOutArgument>
                                        <InOutArgument x:TypeArguments="s:String[]" x:Key="wbDocNames">
                                          <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_105">wbDocNames</mca:CSharpReference>
                                        </InOutArgument>
                                      </ui:InvokeCode.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeCode>
                                    <ui:ExcelReadColumn DisplayName="Read Vadovas LT text" sap:VirtualizedContainerService.HintSize="376,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_15" SheetName="Vadovas" StartingCell="B2">
                                      <ui:ExcelReadColumn.Result>
                                        <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_106">readValue</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:ExcelReadColumn.Result>
                                    </ui:ExcelReadColumn>
                                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="wbDocNames = enumList.Cast&lt;string&gt;().ToArray();" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="376,164" sap2010:WorkflowViewState.IdRef="InvokeCode_20" Language="CSharp">
                                      <ui:InvokeCode.Arguments>
                                        <InOutArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="enumList">
                                          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_107">readValue</mca:CSharpReference>
                                        </InOutArgument>
                                        <InOutArgument x:TypeArguments="s:String[]" x:Key="wbDocNames">
                                          <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_108">wbDocLT</mca:CSharpReference>
                                        </InOutArgument>
                                      </ui:InvokeCode.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeCode>
                                    <ui:ExcelReadColumn DisplayName="Read Vadovas EN text" sap:VirtualizedContainerService.HintSize="376,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_16" SheetName="Vadovas" StartingCell="C2">
                                      <ui:ExcelReadColumn.Result>
                                        <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_109">readValue</mca:CSharpReference>
                                        </OutArgument>
                                      </ui:ExcelReadColumn.Result>
                                    </ui:ExcelReadColumn>
                                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="wbDocNames = enumList.Cast&lt;string&gt;().ToArray();" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="376,164" sap2010:WorkflowViewState.IdRef="InvokeCode_21" Language="CSharp">
                                      <ui:InvokeCode.Arguments>
                                        <InOutArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="enumList">
                                          <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_110">readValue</mca:CSharpReference>
                                        </InOutArgument>
                                        <InOutArgument x:TypeArguments="s:String[]" x:Key="wbDocNames">
                                          <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_111">wbDocEN</mca:CSharpReference>
                                        </InOutArgument>
                                      </ui:InvokeCode.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeCode>
                                    <ui:InvokeCode ContinueOnError="{x:Null}" Code="string tempLT = docLT[0];&#xA;string tempEN = docEN[0];&#xA;&#xA;        for(int i = 0; i &lt; nameList.Count()-1; i++) {&#xA;            if(!nameMap.ContainsKey(nameList[i]) &amp;&amp; nameList[i] == nameList[i+1]) {&#xA;                tempLT += Environment.NewLine + docLT[i+1];&#xA;                tempEN += Environment.NewLine + docEN[i+1];&#xA;            }&#xA;&#x9;&#x9; else {&#xA;                if(nameMap.ContainsKey(nameList[i])) continue;&#xA;                nameMap.Add(nameList[i], new List&lt;String&gt;(new string[] {tempLT, tempEN}));&#xA;                tempLT = docLT[i+1];&#xA;                tempEN = docEN[i+1];&#xA;            }&#xA;        }&#xA;            if(!nameMap.ContainsKey(nameList[nameList.Count()-1])) nameMap.Add(nameList[nameList.Count()-1], new List&lt;String&gt;(new string[] {tempLT, tempEN}));" DisplayName="Assign each Vadotas its LT and EN text" sap:VirtualizedContainerService.HintSize="376,164" sap2010:WorkflowViewState.IdRef="InvokeCode_22" Language="CSharp">
                                      <ui:InvokeCode.Arguments>
                                        <InOutArgument x:TypeArguments="s:String[]" x:Key="nameList">
                                          <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_112">wbDocNames</mca:CSharpReference>
                                        </InOutArgument>
                                        <InOutArgument x:TypeArguments="s:String[]" x:Key="docLT">
                                          <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_113">wbDocLT</mca:CSharpReference>
                                        </InOutArgument>
                                        <InOutArgument x:TypeArguments="s:String[]" x:Key="docEN">
                                          <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_114">wbDocEN</mca:CSharpReference>
                                        </InOutArgument>
                                        <InOutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="nameMap">
                                          <mca:CSharpReference x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" sap2010:WorkflowViewState.IdRef="CSharpReference`1_115">docDictionary</mca:CSharpReference>
                                        </InOutArgument>
                                      </ui:InvokeCode.Arguments>
                                    </ui:InvokeCode>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ExcelApplicationScope.Body>
                              <ui:ExcelApplicationScope.ExistingWorkbook>
                                <InArgument x:TypeArguments="ui:WorkbookApplication">
                                  <mca:CSharpValue x:TypeArguments="ui:WorkbookApplication" sap2010:WorkflowViewState.IdRef="CSharpValue`1_120">WORKBOOK</mca:CSharpValue>
                                </InArgument>
                              </ui:ExcelApplicationScope.ExistingWorkbook>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ExcelApplicationScope>
                          </Sequence>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">200,243.5</av:Point>
                                  <av:Size x:Key="ShapeSize">200,66</av:Size>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Search and edit each Vadovas" sap:VirtualizedContainerService.HintSize="496,1986" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:InvokeCode ContinueOnError="{x:Null}" Code="wbDocNames = wbDocNames.Distinct().ToArray();" DisplayName="Remove duplicates from Vadovas names array" sap:VirtualizedContainerService.HintSize="454,164" sap2010:WorkflowViewState.IdRef="InvokeCode_23" Language="CSharp">
                                  <ui:InvokeCode.Arguments>
                                    <InOutArgument x:TypeArguments="s:String[]" x:Key="wbDocNames">
                                      <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_116">wbDocNames</mca:CSharpReference>
                                    </InOutArgument>
                                  </ui:InvokeCode.Arguments>
                                </ui:InvokeCode>
                                <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For each Vadovas in the array" sap:VirtualizedContainerService.HintSize="454,1690" sap2010:WorkflowViewState.IdRef="ForEach`1_2">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:Object">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                      </ActivityAction.Argument>
                                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="418,1556" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,712" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Search for article in LT language" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="wf_editPageByCategory.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="ui:Browser" x:Key="BROWSER">
                                                <mca:CSharpValue x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpValue`1_121">BROWSER</mca:CSharpValue>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="ARTICLE_SEARCH_PATH">
                                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_122">ARTICLE_SEARCH_PATH</mca:CSharpValue>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="language">LT</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="category">Darbuotojai</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="docName">
                                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_123">item.ToString()</mca:CSharpValue>
                                              </InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Copy the text from article to clipboard" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_21" UnSafe="False" WorkflowFileName="CopyEditorText.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InOutArgument x:TypeArguments="x:String" x:Key="readValue">
                                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_117">textVal</mca:CSharpReference>
                                              </InOutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="String existingPat = @&quot;(&lt;p&gt;{slider\sMokslinink.\srengimas((?:(?!&lt;p&gt;{(slider|\/sliders)).)+[\r\n])+)&quot;;&#xD;&#xA;&#xD;&#xA;        Regex existingReg = new Regex(existingPat);&#xD;&#xA;        Match match = existingReg.Match(str);&#xD;&#xA;        // Slider already present, replace&#xD;&#xA;        if (match.Success) {&#xD;&#xA;            str = Regex.Replace(str, existingPat, updated + Environment.NewLine);&#xD;&#xA;        } else {&#xD;&#xA;            // Slider not present, append at the bottom&#xD;&#xA;            str = Regex.Replace(str, @&quot;&lt;p&gt;{\/sliders}&lt;/p&gt;&quot;, &quot;&quot;) + updated + Environment.NewLine + @&quot;&lt;p&gt;/sliders}&lt;/p&gt;&quot;;&#xD;&#xA;        }" DisplayName="Change the text with new value" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_24" Language="CSharp">
                                            <ui:InvokeCode.Arguments>
                                              <InOutArgument x:TypeArguments="x:String" x:Key="str">
                                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_118">textVal</mca:CSharpReference>
                                              </InOutArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="updated">
                                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_124">docDictionary[item.ToString()][0]</mca:CSharpValue>
                                              </InArgument>
                                            </ui:InvokeCode.Arguments>
                                          </ui:InvokeCode>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Apply new text to article and save" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_22" UnSafe="False" WorkflowFileName="ClearEditorAndSaveChanges.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="textVal">
                                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_125">textVal</mca:CSharpValue>
                                              </InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                        <Sequence sap:VirtualizedContainerService.HintSize="376,712" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Kvieciama pagal EN" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_23" UnSafe="False" WorkflowFileName="wf_editPageByCategory.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="ui:Browser" x:Key="BROWSER">
                                                <mca:CSharpValue x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpValue`1_126">BROWSER</mca:CSharpValue>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="ARTICLE_SEARCH_PATH">
                                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_127">ARTICLE_SEARCH_PATH</mca:CSharpValue>
                                              </InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="language">EN</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="category">Darbuotojai</InArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="docName">
                                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_128">item.ToString()</mca:CSharpValue>
                                              </InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_24" UnSafe="False" WorkflowFileName="CopyEditorText.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InOutArgument x:TypeArguments="x:String" x:Key="readValue">
                                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_119">textVal</mca:CSharpReference>
                                              </InOutArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="String existingPat = @&quot;(&lt;p&gt;{slider\sPhD\sSupervision((?:(?!&lt;p&gt;{(slider|/sliders)).)+[\r\n])+)&quot;;&#xD;&#xA;&#xD;&#xA;        Regex existingReg = new Regex(existingPat);&#xD;&#xA;        Match match = existingReg.Match(str);&#xD;&#xA;        // Slider already present, replace&#xD;&#xA;        if (match.Success) {&#xD;&#xA;            str = Regex.Replace(str, existingPat, updated + Environment.NewLine);&#xD;&#xA;        } else {&#xD;&#xA;            // Slider not present, append at the bottom&#xD;&#xA;            str = Regex.Replace(str, @&quot;&lt;p&gt;{\/sliders}&lt;/p&gt;&quot;, &quot;&quot;) + updated + Environment.NewLine + @&quot;&lt;p&gt;/sliders}&lt;/p&gt;&quot;;&#xD;&#xA;        }" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_25" Language="CSharp">
                                            <ui:InvokeCode.Arguments>
                                              <InOutArgument x:TypeArguments="x:String" x:Key="str">
                                                <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_120">textVal</mca:CSharpReference>
                                              </InOutArgument>
                                              <InArgument x:TypeArguments="x:String" x:Key="updated">
                                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_129">docDictionary[item.ToString()][1]</mca:CSharpValue>
                                              </InArgument>
                                            </ui:InvokeCode.Arguments>
                                          </ui:InvokeCode>
                                          <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_25" UnSafe="False" WorkflowFileName="ClearEditorAndSaveChanges.xaml">
                                            <ui:InvokeWorkflowFile.Arguments>
                                              <InArgument x:TypeArguments="x:String" x:Key="textVal">
                                                <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">textVal</mca:CSharpValue>
                                              </InArgument>
                                            </ui:InvokeWorkflowFile.Arguments>
                                          </ui:InvokeWorkflowFile>
                                        </Sequence>
                                      </Sequence>
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                  <ui:ForEach.Values>
                                    <InArgument x:TypeArguments="sc:IEnumerable">
                                      <mca:CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">wbDocNames</mca:CSharpValue>
                                    </InArgument>
                                  </ui:ForEach.Values>
                                </ui:ForEach>
                              </Sequence>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                        <x:Reference>__ReferenceID14</x:Reference>
                      </Flowchart>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID23">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">200,628.5</av:Point>
                              <av:Size x:Key="ShapeSize">200,51</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:CommentOut sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="CommentOut_15">
                            <ui:CommentOut.Body>
                              <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_69">
                                <Flowchart DisplayName="Grupiu duomenu tvarkymas" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Flowchart_6">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                                      <av:Size x:Key="ShapeSize">60,75</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,154.5</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Flowchart.StartNode>
                                    <x:Reference>__ReferenceID18</x:Reference>
                                  </Flowchart.StartNode>
                                  <FlowStep x:Name="__ReferenceID18">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <av:Point x:Key="ShapeLocation">200,154.5</av:Point>
                                        <av:Size x:Key="ShapeSize">200,51</av:Size>
                                        <av:PointCollection x:Key="ConnectorLocation">300,205.5 300,255.5</av:PointCollection>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:ExcelApplicationScope Password="{x:Null}" WorkbookPath="{x:Null}" CreateNewFile="False" DisplayName="Generate and read Grupe LT" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_10" InstanceCachePeriod="3000">
                                      <ui:ExcelApplicationScope.Body>
                                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                                          </ActivityAction.Argument>
                                          <Sequence sap:VirtualizedContainerService.HintSize="520,1830" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                            <Sequence.Variables>
                                              <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="wbRows" />
                                              <Variable x:TypeArguments="scg:IEnumerable(x:Object)" Name="readValue" />
                                            </Sequence.Variables>
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="478,321" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="436,229" sap2010:WorkflowViewState.IdRef="CommentOut_12">
                                                <ui:CommentOut.Body>
                                                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,151" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                    <sap:WorkflowViewStateService.ViewState>
                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                      </scg:Dictionary>
                                                    </sap:WorkflowViewStateService.ViewState>
                                                    <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Generate &quot;Grupe&quot;" sap:VirtualizedContainerService.HintSize="334,59" sap2010:WorkflowViewState.IdRef="ExecuteMacro_9" MacroName="doktorantu_baze.xlsm!ThisWorkbook.grupe" />
                                                  </Sequence>
                                                </ui:CommentOut.Body>
                                              </ui:CommentOut>
                                            </Sequence>
                                            <Assign sap:VirtualizedContainerService.HintSize="478,60" sap2010:WorkflowViewState.IdRef="Assign_20">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">
                                                  <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_121">textVal</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">
                                                  <Literal x:TypeArguments="x:String" Value="" />
                                                </InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <ui:ExcelReadColumn DisplayName="Read GroupName" sap:VirtualizedContainerService.HintSize="478,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_17" SheetName="Grupė" StartingCell="A2">
                                              <ui:ExcelReadColumn.Result>
                                                <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_122">readValue</mca:CSharpReference>
                                                </OutArgument>
                                              </ui:ExcelReadColumn.Result>
                                            </ui:ExcelReadColumn>
                                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="wbDocNames = enumList.Cast&lt;string&gt;().ToArray();" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="478,164" sap2010:WorkflowViewState.IdRef="InvokeCode_26" Language="CSharp">
                                              <ui:InvokeCode.Arguments>
                                                <InOutArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="enumList">
                                                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_123">readValue</mca:CSharpReference>
                                                </InOutArgument>
                                                <InOutArgument x:TypeArguments="s:String[]" x:Key="wbDocNames">
                                                  <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_124">wbDocNames</mca:CSharpReference>
                                                </InOutArgument>
                                              </ui:InvokeCode.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeCode>
                                            <ui:ExcelReadColumn DisplayName="Read GroupLT" sap:VirtualizedContainerService.HintSize="478,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_18" SheetName="Grupė" StartingCell="B2">
                                              <ui:ExcelReadColumn.Result>
                                                <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_125">readValue</mca:CSharpReference>
                                                </OutArgument>
                                              </ui:ExcelReadColumn.Result>
                                            </ui:ExcelReadColumn>
                                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="wbDocNames = enumList.Cast&lt;string&gt;().ToArray();" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="478,164" sap2010:WorkflowViewState.IdRef="InvokeCode_27" Language="CSharp">
                                              <ui:InvokeCode.Arguments>
                                                <InOutArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="enumList">
                                                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_126">readValue</mca:CSharpReference>
                                                </InOutArgument>
                                                <InOutArgument x:TypeArguments="s:String[]" x:Key="wbDocNames">
                                                  <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_127">wbDocLT</mca:CSharpReference>
                                                </InOutArgument>
                                              </ui:InvokeCode.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeCode>
                                            <ui:ExcelReadColumn DisplayName="Read GroupEN" sap:VirtualizedContainerService.HintSize="478,59" sap2010:WorkflowViewState.IdRef="ExcelReadColumn_19" SheetName="Grupė" StartingCell="C2">
                                              <ui:ExcelReadColumn.Result>
                                                <OutArgument x:TypeArguments="scg:IEnumerable(x:Object)">
                                                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_128">readValue</mca:CSharpReference>
                                                </OutArgument>
                                              </ui:ExcelReadColumn.Result>
                                            </ui:ExcelReadColumn>
                                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="wbDocNames = enumList.Cast&lt;string&gt;().ToArray();" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="478,164" sap2010:WorkflowViewState.IdRef="InvokeCode_28" Language="CSharp">
                                              <ui:InvokeCode.Arguments>
                                                <InOutArgument x:TypeArguments="scg:IEnumerable(x:Object)" x:Key="enumList">
                                                  <mca:CSharpReference x:TypeArguments="scg:IEnumerable(x:Object)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_129">readValue</mca:CSharpReference>
                                                </InOutArgument>
                                                <InOutArgument x:TypeArguments="s:String[]" x:Key="wbDocNames">
                                                  <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_130">wbDocEN</mca:CSharpReference>
                                                </InOutArgument>
                                              </ui:InvokeCode.Arguments>
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                            </ui:InvokeCode>
                                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="string tempLT = docLT[0];&#xA;string tempEN = docEN[0];&#xA;&#xA;        for(int i = 0; i &lt; nameList.Count()-1; i++) {&#xA;            if(!nameMap.ContainsKey(nameList[i]) &amp;&amp; nameList[i] == nameList[i+1]) {&#xA;                tempLT += Environment.NewLine + docLT[i+1];&#xA;                tempEN += Environment.NewLine + docEN[i+1];&#xA;            }&#xA;&#x9;&#x9; else {&#xA;                if(nameMap.ContainsKey(nameList[i])) continue;&#xA;                nameMap.Add(nameList[i], new List&lt;String&gt;(new string[] {tempLT, tempEN}));&#xA;                tempLT = docLT[i+1];&#xA;                tempEN = docEN[i+1];&#xA;            }&#xA;        }&#xA;            if(!nameMap.ContainsKey(nameList[nameList.Count()-1])) nameMap.Add(nameList[nameList.Count()-1], new List&lt;String&gt;(new string[] {tempLT, tempEN}));" DisplayName="Assign each group its LT and EN values" sap:VirtualizedContainerService.HintSize="478,164" sap2010:WorkflowViewState.IdRef="InvokeCode_29" Language="CSharp">
                                              <ui:InvokeCode.Arguments>
                                                <InOutArgument x:TypeArguments="s:String[]" x:Key="nameList">
                                                  <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_131">wbDocNames</mca:CSharpReference>
                                                </InOutArgument>
                                                <InOutArgument x:TypeArguments="s:String[]" x:Key="docLT">
                                                  <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_132">wbDocLT</mca:CSharpReference>
                                                </InOutArgument>
                                                <InOutArgument x:TypeArguments="s:String[]" x:Key="docEN">
                                                  <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_133">wbDocEN</mca:CSharpReference>
                                                </InOutArgument>
                                                <InOutArgument x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" x:Key="nameMap">
                                                  <mca:CSharpReference x:TypeArguments="scg:Dictionary(x:String, scg:List(x:String))" sap2010:WorkflowViewState.IdRef="CSharpReference`1_134">docDictionary</mca:CSharpReference>
                                                </InOutArgument>
                                              </ui:InvokeCode.Arguments>
                                            </ui:InvokeCode>
                                            <ui:InvokeCode ContinueOnError="{x:Null}" Code="wbDocNames = wbDocNames.Distinct().ToArray();" DisplayName="Remove duplicate values from Group array" sap:VirtualizedContainerService.HintSize="478,164" sap2010:WorkflowViewState.IdRef="InvokeCode_30" Language="CSharp">
                                              <ui:InvokeCode.Arguments>
                                                <InOutArgument x:TypeArguments="s:String[]" x:Key="wbDocNames">
                                                  <mca:CSharpReference x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpReference`1_135">wbDocNames</mca:CSharpReference>
                                                </InOutArgument>
                                              </ui:InvokeCode.Arguments>
                                            </ui:InvokeCode>
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ExcelApplicationScope.Body>
                                      <ui:ExcelApplicationScope.ExistingWorkbook>
                                        <InArgument x:TypeArguments="ui:WorkbookApplication">
                                          <mca:CSharpValue x:TypeArguments="ui:WorkbookApplication" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">WORKBOOK</mca:CSharpValue>
                                        </InArgument>
                                      </ui:ExcelApplicationScope.ExistingWorkbook>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:ExcelApplicationScope>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID16">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <av:Point x:Key="ShapeLocation">200,255.5</av:Point>
                                            <av:Size x:Key="ShapeSize">200,66</av:Size>
                                            <av:PointCollection x:Key="ConnectorLocation">300,321.5 300,371.5</av:PointCollection>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Sequence DisplayName="Edit each LT group page" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="412,846" sap2010:WorkflowViewState.IdRef="ForEach`1_3">
                                            <ui:ForEach.Body>
                                              <ActivityAction x:TypeArguments="x:Object">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,712" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Go Edit each Group Page" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_26" UnSafe="False" WorkflowFileName="wf_editPageById.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="ARTICLE_SEARCH_PATH">
                                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">ARTICLE_SEARCH_PATH</mca:CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="ui:Browser" x:Key="BROWSER">
                                                        <mca:CSharpValue x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">BROWSER</mca:CSharpValue>
                                                      </InArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="id">
                                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">PAGE_ID_MAP[item.ToString()]</mca:CSharpValue>
                                                      </InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Copy editor text to clipboard" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_27" UnSafe="False" WorkflowFileName="CopyEditorText.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InOutArgument x:TypeArguments="x:String" x:Key="readValue">
                                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_136">textVal</mca:CSharpReference>
                                                      </InOutArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                  <ui:InvokeCode ContinueOnError="{x:Null}" Code="String existingPat = @&quot;((&lt;h3&gt;Doktorantai&lt;\/h3&gt;[\r\n])((?:(?!&lt;p&gt;{(slider|\/sliders)).)*[\r\n])+)&quot;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        Regex existingReg = new Regex(existingPat);&#xD;&#xA;        Match match = existingReg.Match(str);&#xD;&#xA;        // Slider already present, replace&#xD;&#xA;        if (match.Success) {&#xD;&#xA;            str = Regex.Replace(str, existingPat, match.Groups[2].ToString() + Environment.NewLine + updated + Environment.NewLine);&#xD;&#xA;        } else {&#xD;&#xA;            // Slider not present, append at the bottom&#xD;&#xA;            str = Regex.Replace(str, @&quot;&lt;p&gt;{\/sliders}&lt;/p&gt;&quot;, &quot;&quot;) &#xD;&#xA;                + &quot;&lt;p&gt;{slider Mokslas ir studijos}&lt;/p&gt;&quot; &#xD;&#xA;                + Environment.NewLine &#xD;&#xA;                + &quot;&lt;h3&gt;Doktorantai&lt;/h3&gt;&quot;&#xD;&#xA;                + Environment.NewLine &#xD;&#xA;                + updated &#xD;&#xA;                + Environment.NewLine &#xD;&#xA;                + @&quot;&lt;p&gt;/sliders}&lt;/p&gt;&quot;;&#xD;&#xA;        }" DisplayName="Add Group LT paragraph to copied text" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_31" Language="CSharp">
                                                    <ui:InvokeCode.Arguments>
                                                      <InOutArgument x:TypeArguments="x:String" x:Key="str">
                                                        <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_137">textVal</mca:CSharpReference>
                                                      </InOutArgument>
                                                      <InArgument x:TypeArguments="x:String" x:Key="updated">
                                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">docDictionary[item.ToString()][0]</mca:CSharpValue>
                                                      </InArgument>
                                                    </ui:InvokeCode.Arguments>
                                                  </ui:InvokeCode>
                                                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Paste new text and save article" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_28" UnSafe="False" WorkflowFileName="ClearEditorAndSaveChanges.xaml">
                                                    <ui:InvokeWorkflowFile.Arguments>
                                                      <InArgument x:TypeArguments="x:String" x:Key="textVal">
                                                        <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">textVal</mca:CSharpValue>
                                                      </InArgument>
                                                    </ui:InvokeWorkflowFile.Arguments>
                                                  </ui:InvokeWorkflowFile>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:ForEach.Body>
                                            <ui:ForEach.Values>
                                              <InArgument x:TypeArguments="sc:IEnumerable">
                                                <mca:CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">wbDocNames</mca:CSharpValue>
                                              </InArgument>
                                            </ui:ForEach.Values>
                                          </ui:ForEach>
                                        </Sequence>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID17">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <av:Point x:Key="ShapeLocation">200,371.5</av:Point>
                                                <av:Size x:Key="ShapeSize">200,66</av:Size>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <Sequence DisplayName="Edit each EN group page" sap:VirtualizedContainerService.HintSize="200,66" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <ui:ForEach x:TypeArguments="x:Object" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="412,946" sap2010:WorkflowViewState.IdRef="ForEach`1_4">
                                                <ui:ForEach.Body>
                                                  <ActivityAction x:TypeArguments="x:Object">
                                                    <ActivityAction.Argument>
                                                      <DelegateInArgument x:TypeArguments="x:Object" Name="item" />
                                                    </ActivityAction.Argument>
                                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="376,812" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_21">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Object">
                                                            <mca:CSharpReference x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpReference`1_140">item</mca:CSharpReference>
                                                          </OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Object">
                                                            <mca:CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">item.ToString() + "-EN"</mca:CSharpValue>
                                                          </InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Go Edit each Group Page" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_29" UnSafe="False" WorkflowFileName="wf_editPageById.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <InArgument x:TypeArguments="x:String" x:Key="ARTICLE_SEARCH_PATH">
                                                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">ARTICLE_SEARCH_PATH</mca:CSharpValue>
                                                          </InArgument>
                                                          <InArgument x:TypeArguments="ui:Browser" x:Key="BROWSER">
                                                            <mca:CSharpValue x:TypeArguments="ui:Browser" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">BROWSER</mca:CSharpValue>
                                                          </InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="id">
                                                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">PAGE_ID_MAP[item.ToString()]</mca:CSharpValue>
                                                          </InArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                      </ui:InvokeWorkflowFile>
                                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Copy text from editor to clipboard" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_30" UnSafe="False" WorkflowFileName="CopyEditorText.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <InOutArgument x:TypeArguments="x:String" x:Key="readValue">
                                                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_138">textVal</mca:CSharpReference>
                                                          </InOutArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                      </ui:InvokeWorkflowFile>
                                                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="String existingPat = @&quot;((&lt;h3&gt;Phd\sStudents&lt;\/h3&gt;[\r\n])((?:(?!&lt;p&gt;{(slider|\/sliders)).)*[\r\n])+)&quot;;&#xD;&#xA;&#xD;&#xA;        &#xD;&#xA;        Regex existingReg = new Regex(existingPat);&#xD;&#xA;        Match match = existingReg.Match(str);&#xD;&#xA;        // Slider already present, replace&#xD;&#xA;        if (match.Success) {&#xD;&#xA;            str = Regex.Replace(str, existingPat, match.Groups[2].ToString() + Environment.NewLine + updated + Environment.NewLine);&#xD;&#xA;        } else {&#xD;&#xA;            // Slider not present, append at the bottom&#xD;&#xA;            str = Regex.Replace(str, @&quot;&lt;p&gt;{\/sliders}&lt;/p&gt;&quot;, &quot;&quot;) &#xD;&#xA;                + &quot;&lt;p&gt;{slider Science and Education}&lt;/p&gt;&quot; &#xD;&#xA;                + Environment.NewLine &#xD;&#xA;                + &quot;&lt;h3&gt;Phd Students&lt;/h3&gt;&quot;&#xD;&#xA;                + Environment.NewLine &#xD;&#xA;                + updated &#xD;&#xA;                + Environment.NewLine &#xD;&#xA;                + @&quot;&lt;p&gt;/sliders}&lt;/p&gt;&quot;;&#xD;&#xA;        }" DisplayName="Edit copied text with new added paragraph" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_32" Language="CSharp">
                                                        <ui:InvokeCode.Arguments>
                                                          <InOutArgument x:TypeArguments="x:String" x:Key="str">
                                                            <mca:CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_139">textVal</mca:CSharpReference>
                                                          </InOutArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="updated">
                                                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">docDictionary[item.ToString()][1]</mca:CSharpValue>
                                                          </InArgument>
                                                        </ui:InvokeCode.Arguments>
                                                      </ui:InvokeCode>
                                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Paste text in editor and save" sap:VirtualizedContainerService.HintSize="334,112" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_31" UnSafe="False" WorkflowFileName="ClearEditorAndSaveChanges.xaml">
                                                        <ui:InvokeWorkflowFile.Arguments>
                                                          <InArgument x:TypeArguments="x:String" x:Key="textVal">
                                                            <mca:CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">textVal</mca:CSharpValue>
                                                          </InArgument>
                                                        </ui:InvokeWorkflowFile.Arguments>
                                                      </ui:InvokeWorkflowFile>
                                                    </Sequence>
                                                  </ActivityAction>
                                                </ui:ForEach.Body>
                                                <ui:ForEach.Values>
                                                  <InArgument x:TypeArguments="sc:IEnumerable">
                                                    <mca:CSharpValue x:TypeArguments="sc:IEnumerable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">wbDocNames</mca:CSharpValue>
                                                  </InArgument>
                                                </ui:ForEach.Values>
                                              </ui:ForEach>
                                            </Sequence>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                  <x:Reference>__ReferenceID16</x:Reference>
                                  <x:Reference>__ReferenceID17</x:Reference>
                                </Flowchart>
                              </Sequence>
                            </ui:CommentOut.Body>
                          </ui:CommentOut>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID19</x:Reference>
    <x:Reference>__ReferenceID20</x:Reference>
    <x:Reference>__ReferenceID21</x:Reference>
    <x:Reference>__ReferenceID22</x:Reference>
    <x:Reference>__ReferenceID23</x:Reference>
  </Flowchart>
</Activity>